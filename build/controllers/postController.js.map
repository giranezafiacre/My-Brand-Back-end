{"version":3,"sources":["../../src/controllers/postController.js"],"names":["readAll","req","res","posts","status","json","error","message","data","readById","id","params","post","filter","create","title","body","content","author","push","update","comment","c","fullname","suggestion","comments","deletePost","a","indexOf","splice"],"mappings":"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","sourcesContent":["import posts from '../models/posts';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport const readAll = (req, res) => {\r\n    if (!posts) {\r\n        return res.status(404).json({\r\n            status: 404,\r\n            error: 'No post found',\r\n        });\r\n    }\r\n    return res.status(200).json({\r\n        status: 200,\r\n        message: 'posts successfully retrieved',\r\n        data: {\r\n            posts,\r\n        },\r\n    });\r\n};\r\nexport const readById = (req, res) => {\r\n    const id = req.params.id;\r\n    const post = posts.filter((post) => {\r\n        return post.id === id;\r\n    });\r\n    if (post[0]) {\r\n        return res.status(200).json({\r\n            status: 200,\r\n            message: 'post successfully retrieved',\r\n            data: post,\r\n        });\r\n    }\r\n    return res.status(404).json({\r\n        status: 404,\r\n        error: 'post not found',\r\n    });\r\n\r\n};\r\nexport const create = (req, res) => {\r\n    const post = {\r\n        id: uuidv4(),\r\n        title:req.body.title,\r\n        content:req.body.content,\r\n        author: req.body.author\r\n    };\r\n    posts.push(post);\r\n    return res.status(201).json({\r\n        status: 201,\r\n        message: 'post successfully created',\r\n        data: post,\r\n    });\r\n\r\n};\r\n\r\nexport const update=(req,res)=>{\r\n    const id = req.params.id;\r\n    const post = posts.filter((post) => {\r\n        return post.id === id;\r\n    });\r\n    if(post[0]){\r\n        post[0].title=req.body.title;\r\n        post[0].content=req.body.content;\r\n        post[0].author= req.body.author;\r\n        return res.status(200).json({\r\n            status: 200,\r\n            message: 'post successfully updated',\r\n            data: post,\r\n        });\r\n    }\r\n    return res.status(404).json({\r\n        status: 404,\r\n        error: 'post not found',\r\n    });\r\n    \r\n}\r\n\r\nexport const comment=(req,res)=>{\r\n    const id = req.params.id;\r\n    const post = posts.filter((post) => {\r\n        return post.id === id;\r\n    });\r\n    if(post[0]){\r\n        var c={\r\n            fullname:req.body.fullname,\r\n            suggestion:req.body.suggestion\r\n        };\r\n        post[0].comments.push(c);\r\n     \r\n        return res.status(200).json({\r\n            status: 200,\r\n            message: 'post successfully commented',\r\n            data: post,\r\n        });\r\n    }\r\n    return res.status(404).json({\r\n        status: 404,\r\n        error: 'post not found',\r\n    });\r\n}\r\n\r\nexport const deletePost=(req,res)=>{\r\n    const id=req.params.id;\r\n    const post = posts.filter((post) => {\r\n        return post.id === id;\r\n    });\r\n    if(post[0]){\r\n        var a = posts.indexOf(post[0]);\r\n        posts.splice(a, 1);\r\n        return res.status(200).json({\r\n            status: 200,\r\n            message: 'post successfully deleted',\r\n            data: post,\r\n        });\r\n    }\r\n    return res.status(404).json({\r\n        status: 404,\r\n        error: 'post not found',\r\n    });\r\n}"],"file":"postController.js"}